<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * EnterpriseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EnterpriseRepository extends \Doctrine\ORM\EntityRepository
{
    public function listPage($page, $pageLimit = 20, $condition)
    {
        $queryBuilder = $this->_em->createQueryBuilder()
            ->select('a')
            ->from('AppBundle:Enterprise', 'a');
        if (!empty($condition['name'])) {
            $queryBuilder->andWhere('a.name = :name');
            $queryBuilder->setParameter('name', $condition['name']);
        }
        if (!empty($condition['state'])) {
            $queryBuilder->andWhere('a.state = :state');
            $queryBuilder->setParameter('state', $condition['state']);
        }
        if (!empty($condition['in_black_list'])) {
            $queryBuilder->andWhere('a.inBlackList = :in_black_list');
            $queryBuilder->setParameter('in_black_list', $condition['in_black_list']);
        }
        if (!empty($condition['bank'])) {
            $queryBuilder->andWhere('a.bank = :bank');
            $queryBuilder->setParameter('bank', $condition['bank']);
        }
        if (!empty($condition['role_a_disable'])) {
            if ($condition['role_a_disable'] == 1) {
                $queryBuilder->leftJoin('a.roleA', 'r', 'WITH', 'r.state IN (0,2,3)');
                $queryBuilder->andWhere('r.state IN (0,2,3)');
            }
        }
        $query = $queryBuilder->orderBy('a.id', 'ASC')->getQuery();
        $query->setFirstResult(($page - 1) * $pageLimit)->setMaxResults($pageLimit);
        $paginator = new Paginator($query, $fetchJoinCollection = true);

        $result = [
            'count' => $paginator->count(),
            'pageCount' => ceil($paginator->count() / $pageLimit),
            'data' => $paginator->getIterator()
        ];
        return $result;

    }
}
